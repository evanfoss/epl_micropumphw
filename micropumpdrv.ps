%!PS-Adobe-3.0
%%Creator: gEDA gschem 1.8.1-20121123
%%CreationDate: Wed Jun  5 18:18:26 2013
%%Title: /oldroot/home/fosse/Documents/work/wearable micropump/epl wearable micropump hw/micropumpdrv.sch
%%Author: fosse
%%BoundingBox: 0 0 612 792
%%Orientation: Landscape
%%Pages: 1
%%EndComments
%%BeginProlog
% Prolog for gEDA, define all the functions needed for rendering
% schematics on Postscript devices


% Draw a line from the second coordinate to the first
% x2 y2 x1 y1 width line -
/line {
    setlinewidth
    % pop off first element and moveto
    moveto
    % pop off remaining elements and draw a line segment
    lineto
    % draw it
    stroke
} bind def


% Draw a dot
% x y r dot -
/dot {
    0 360 arc fill
} bind def

% Draw a dot-dashed line, a bunch of lined segments,
% if the array element only has length two, draw a dot.
% [ [x2 y2 x1 y1] [x4 y4 x3 y3] [x5 y5] ... ] width dashed -
/width 0 def
/dashed {
    dup 2.0 div /width exch def
    setlinewidth
    % pop off each line segment and draw it as a dot or as a line
    {
	aload length 2 gt
	{ moveto lineto stroke}
	{ width dot } ifelse
    } forall
} bind def

% Draw an arc segment
% x y r ang1 ang2 width darc -
/darc {
    setlinewidth
    arc stroke
} bind def

% Draw a series of arc segment bits, if the array element only has a single
% element in it, draw a dot.
% [ [sa1 ea1] [sa2 ea2] ... ] x y r width dashedarc -
/x 0 def
/y 0 def
/dashedarc {
    dup /width exch def
    setlinewidth
    /r exch def  
    /y exch def
    /x exch def
    { aload length 1 gt
	{
	    % this element had two angles in it
	    % extract start and stop angles
	    x y r   % drop x y and r onto stack
		    % at this point we have: sa ea x y r
		    % we need                      x y r sa ea
		    % so..
	    5 -2 roll
	    % and add it to the current path, and draw it
	    arc stroke
	} {
	    % this element only had one angle in it, place a
	    % filled dot at the appropriate place
	    % compute center point of the arc using the angle
	    % that is on the top of the stack
	    dup   		% angle angle
	    cos r mul x add 	% angle x
	    exch		% x angle
	    sin r mul y add	% x y
	    width		% x y width/2
	    dot			% draw the dot
	} ifelse
    } forall

    % Now draw it
    stroke
} bind def

% Draw a box
% width height x y linethickness box -
/box {
    setlinewidth
    moveto
    exch dup 0 rlineto	 % w h, h w w 0      -- Draw bottom line
    exch 0 exch rlineto	 % h w, w h 0, w 0 h -- Draw right line 
    neg 0 rlineto	 % w, -w 0           -- Draw Top line
    closepath		 % finish and draw it
    stroke
} bind def			     

% Draw a filled box
% width height x y fbox -
/fbox {
    moveto
    exch dup 0 rlineto	
    exch 0 exch rlineto	
    neg 0 rlineto		
    closepath			
    fill			
} bind def

% Font reincoding utilities

% ISOLatin1Encoding, extended with remaining uncoded glyphs
/ISOLatin1Extended [
    /.notdef /Lslash /lslash /OE /oe /Scaron /scaron /Zcaron /zcaron
    /Ydieresis /trademark /bullet /dagger /daggerdbl /ellipsis /emdash
    /endash /fi /fl /florin /fraction /guilsinglleft /guilsinglright
    /perthousand /quotedblbase /quotedblleft /quotedblright
    /quotesinglbase /quotesingle /.notdef /.notdef /.notdef /space
    /exclam /quotedbl /numbersign /dollar /percent /ampersand
    /quoteright /parenleft /parenright /asterisk /plus /comma /minus
    /period /slash /zero /one /two /three /four /five /six /seven /eight
    /nine /colon /semicolon /less /equal /greater /question /at /A /B /C
    /D /E /F /G /H /I /J /K /L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z
    /bracketleft /backslash /bracketright /asciicircum /underscore
    /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /q /r /s
    /t /u /v /w /x /y /z /braceleft /bar /braceright /asciitilde
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /dotlessi /grave /acute /circumflex
    /tilde /macron /breve /dotaccent /dieresis /.notdef /ring /cedilla
    /.notdef /hungarumlaut /ogonek /caron /space /exclamdown /cent
    /sterling /currency /yen /brokenbar /section /dieresis /copyright
    /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
    /periodcentered /cedilla /onesuperior /ordmasculine /guillemotright
    /onequarter /onehalf /threequarters /questiondown /Agrave /Aacute
    /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla /Egrave /Eacute
    /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth
    /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
    /germandbls /agrave /aacute /acircumflex /atilde /adieresis /aring
    /ae /ccedilla /egrave /eacute /ecircumflex /edieresis /igrave
    /iacute /icircumflex /idieresis /eth /ntilde /ograve /oacute
    /ocircumflex /otilde /odieresis /divide /oslash /ugrave /uacute
    /ucircumflex /udieresis /yacute /thorn /ydieresis
] def

% `new-font-name' `encoding-vector' `old-font-name' RE -
/RE {
    findfont
    dup maxlength dict begin {
        1 index /FID ne { def } { pop pop } ifelse
    } forall
    /Encoding exch def
    dup /FontName exch def
    currentdict end definefont pop
} bind def

% Text handling functions, select the font and scale it, then we need
% only to apply the appropriate transformations to get the text
% justified into the right spots.  The bad thing here is that we don't
% do any kerning, so the output may look a bit strange.

% compute the height of one character and return lly and ury
% (char) charheight lly ury
/charheight {
    gsave			% push graphics state
	newpath			% clear current path
	0 0 moveto		% Set current point
	false charpath		% get path
	flattenpath		% flatten path
	pathbbox		% stack = llx lly urx ury
	exch pop		% stack = llx lly ury
	3 -1 roll pop		% stack = lly ury
    grestore			% pop graphics state
} bind def

% compute the height of a string, one character at a time
% (string) stringheight lly ury
/lly 0.0 def
/ury 0.0 def

/stringheight {
    /lly 0.0 def			% initial value of heightmin
    /ury 0.0 def			% initial value of heightmax
    {				% work through string
	( ) dup 0 4 -1 roll put	% create one character string
	charheight		% measure it's height
	dup ury gt {		% if ury gt heightmax
	    /ury exch def	% update with new value
	} {
	    pop			% else discard ury
	} ifelse
	dup lly lt {		% if lly lt heightmin
	    /lly exch def	% update with new value
	} {
	    pop			% else discard lly
	} ifelse
    } forall
    lly ury			% Return the results
} bind def

% calculate the string width taking into account the escapes.
/mystrx 0.0 def
/mystry 0.0 def
/mystresc false def

/mystringwidth {
    /mystrx 0.0 def
    /mystry 0.0 def
    /mystresc false def
    {				% work through string
	% did we process the escape character last?
	mystresc {
	    % last character was escape
	    % handle the escape
	    % is it an _ = 95?
	    dup 95 eq {
		pop  % we don't need the character anymore
		% toggle drawing overbars
		0.0 0.0 % make it like it never happened...
	    } {
		% otherwise measure the character 
		(\\ ) dup 1 4 -1 roll put % count a \ and the character
		stringwidth
	    } ifelse
	    % and reset the flag
	    /mystresc false def
	} {
	    % last character was not escape
	    % is this escape
	    dup 92 eq {
		% yes, escape character, set flag
		/mystresc true def
		pop % drop character
		0.0 0.0 % make like this character has no width and height
	    } {
		( ) dup 0 4 -1 roll put	% create one character string
		stringwidth		% measure it's height/width
	    } ifelse
	} ifelse
	% accumulate x and y movements
	mystry add /mystry exch def
	mystrx add /mystrx exch def
    } forall
    mystrx mystry % drop results on stack
} bind def

% Render a string with overbars
%
/escaped false def
/drawoverbar false def
/fontsize 0.0 def

%string1 string2 append -
/append {
    2 copy length exch length add % find new length
    string dup % string1 string2 string string
    4 2 roll % string string string1 string2
    2 index 0 3 index
    % string string string1 string2 string 0 string1
    putinterval % string string string1 string2
    exch length exch putinterval
} bind def

% If drawoverbar is set, draw a line of the same length as the given string
% string overbarshowline -
/overbarshowline {
    % print overbar if necessary
    stringwidth pop 0
    drawoverbar {
        rlineto
        gsave stroke grestore
    } {
        rmoveto
    } ifelse
} bind def

% Draws overbars for the given string, then shows the string itself
% string overbarshow
/overbarshow {
    /overbarshowacc () def
    /overbarshowtxt () def

    gsave
    fontsize 10.0 div setlinewidth
    0 fontsize rmoveto  % move to (0,overbarheight)

    {				% work through string
	escaped {
	    % the last character was the escape
	    % handle the escape
	    % is it an _ = 95?
	    dup 95 eq {
		pop  % we don't need the character anymore
                overbarshowacc overbarshowline
                % toggle drawing overbars
		/drawoverbar drawoverbar not def

                % Append the contents off the accumulator to the text
                % string we're eventually going to show
                /overbarshowtxt overbarshowtxt overbarshowacc append def

                % clear accumulator
                /overbarshowacc () def
	    } {
                % add to accumulator
                (\\ ) dup 1 4 -1 roll put
                overbarshowacc exch append
                /overbarshowacc exch def
	    } ifelse
	    % and reset the flag
	    /escaped false def
	} {
	    % check for escape character \ = 92
	    dup 92 eq {
		% yes, escape character, set flag
		/escaped true def
		pop % drop character
	    } {
                % add to accumulator
                ( ) dup 0 4 -1 roll put
                overbarshowacc exch append
                /overbarshowacc exch def
	    } ifelse
	} ifelse
    } forall
    % Catch any leftovers
    overbarshowacc overbarshowline
    overbarshowtxt overbarshowacc append

    grestore
    show
} bind def

% 
% hcenter rjustify vcenter vjustify spacing [(line1) (line2) ... ] rot x y size text -
/stringw 0.0 def
/stringh 0.0 def
/spacing 0.0 def
/strings [ ] def
/stringtxt ( ) def
/stringcount 0 def
/rot 0.0 def

/text {
    gsave	        % save state for later
    /drawoverbar false def      % start by not drawing overbars

    dup /fontsize exch def  % save font size for corrections later
    % do font selection 
    /gEDAFont findfont
    exch scalefont
    setfont

    % set up coordinates
    translate           % move origin to given point
    rotate		% rotate so that text is drawn
    0 0 moveto
    dup length /stringcount exch def			% Get number of strings
    /strings exch def     				% save strings
    /spacing exch def
    % do we have more than 1 string to render?
    stringcount 1 eq {
	/stringtxt strings aload pop def		% get the string 
	/stringw stringtxt mystringwidth pop neg def	% get the -width
	/stringh stringtxt stringheight exch pop neg def% get the -height

	% First do vertical calculations
	% hcenter rjustify vcenter vjustify 
	% vertical justification
	{ 0 stringh rmoveto } if 
	% vertical center
	{ 0 stringh 0.3571425 mul rmoveto } if  % not 0.5, so that
						% it looks nicer
	% Then do horizontal calculations
	% right justify
	{ stringw 0 rmoveto } if
	% center
	{ stringw 2.0 div 0 rmoveto } if
	% Draw the text
	stringtxt overbarshow
    } {
	% More than one line, compute bounding box for the text

	% vertical height, don't use the actual hieght of the characters
	% assume that the user wants to make the baselines line up with two
	% text boxes placed side by side
	/stringh stringcount spacing mul neg def
	% Now figure out horizontal size, this amounts to keeping track
	% of the longest string
	/stringw 0.0 def
	strings {
	    mystringwidth pop
	    dup stringw gt {
		/stringw exch def
	    } {
		pop
	    } ifelse
	} forall
	/stringw stringw neg def 	% get the -width
	
	% First do vertical calculations
	% hcenter rjustify vcenter vjustify 
	% vertical justification
	{ 0 stringh fontsize add rmoveto } if 
	% vertical center
	{ 0 stringh 0.5 mul rmoveto } if 
	% Then do horizontal calculations
	% right justify
	{ stringw 0 rmoveto } if
	% center
	{ stringw 2.0 div 0 rmoveto } if
	% now move up to the first line and begin rendering
	0 stringcount 1 sub spacing mul rmoveto
	strings {
	    gsave		% Save starting point
	    overbarshow		% render the text
	    grestore
	    0 spacing neg rmoveto
	} forall
    } ifelse
    grestore 	% Restore old state
} bind def


%%EndProlog
%%Page: 1 1
/gEDAFont ISOLatin1Extended /Helvetica RE
2 setlinecap
0.072000 0.072000 scale
8113 500 translate 90 rotate
0.227273 0.227273 scale
-40000 -40000 translate
gsave
40000 40000 84000 40000 10 line
84000 40000 84000 74000 10 line
84000 74000 40000 74000 10 line
40000 74000 40000 40000 10 line
79900 40600 79900 40000 10 line
gsave
false false false false 161.777776 [(FILE:) ] 0 76500 40400 144.444443 text
grestore
gsave
false false false false 161.777776 [(REVISION:) ] 0 80000 40400 144.444443 text
grestore
gsave
false false false false 161.777776 [(DRAWN BY: ) ] 0 80000 40100 144.444443 text
grestore
gsave
false false false false 161.777776 [(PAGE) ] 0 76500 40100 144.444443 text
grestore
gsave
false false false false 161.777776 [(OF) ] 0 78200 40100 144.444443 text
grestore
gsave
false false false false 161.777776 [(TITLE) ] 0 76500 40700 144.444443 text
grestore
76400 40000 84000 40000 10 line
84000 40000 84000 41400 10 line
84000 41400 76400 41400 10 line
76400 41400 76400 40000 10 line
76400 40600 84000 40600 10 line
grestore
gsave
71200 61300 71500 61300 10 line
gsave
false false false false 202.222224 [(GND) ] 0 71555 61295 180.555557 text
grestore
gsave
false true false false 202.222224 [(1) ] 0 71405 61345 180.555557 text
grestore
71200 61000 71500 61000 10 line
gsave
false false false false 202.222224 [(CLOCK) ] 0 71555 60995 180.555557 text
grestore
gsave
false true false false 202.222224 [(2) ] 0 71405 61045 180.555557 text
grestore
71200 60700 71500 60700 10 line
gsave
false false false false 202.222224 [(CLKINT) ] 0 71555 60695 180.555557 text
grestore
gsave
false true false false 202.222224 [(3) ] 0 71405 60745 180.555557 text
grestore
71200 60400 71500 60400 10 line
gsave
false false false false 202.222224 [(AMPLITUDE) ] 0 71555 60395 180.555557 text
grestore
gsave
false true false false 202.222224 [(4) ] 0 71405 60445 180.555557 text
grestore
71200 60100 71500 60100 10 line
gsave
false false false false 202.222224 [(GND) ] 0 71555 60095 180.555557 text
grestore
gsave
false true false false 202.222224 [(5) ] 0 71405 60145 180.555557 text
grestore
71200 59800 71500 59800 10 line
gsave
false false false false 202.222224 [(P1+) ] 0 71555 59795 180.555557 text
grestore
gsave
false true false false 202.222224 [(6) ] 0 71405 59845 180.555557 text
grestore
71200 59500 71500 59500 10 line
gsave
false false false false 202.222224 [(P1-) ] 0 71555 59495 180.555557 text
grestore
gsave
false true false false 202.222224 [(7) ] 0 71405 59545 180.555557 text
grestore
74200 61300 73900 61300 10 line
gsave
false true false false 202.222224 [(VDD) ] 0 73845 61295 180.555557 text
grestore
gsave
false false false false 202.222224 [(14) ] 0 73995 61345 180.555557 text
grestore
74200 61000 73900 61000 10 line
gsave
false true false false 202.222224 [(\\_SHUTDOWN\\_) ] 0 73845 60995 180.555557 text
grestore
gsave
false false false false 202.222224 [(13) ] 0 73995 61045 180.555557 text
grestore
74200 60700 73900 60700 10 line
gsave
false true false false 202.222224 [(SLOWRATE) ] 0 73845 60695 180.555557 text
grestore
gsave
false false false false 202.222224 [(12) ] 0 73995 60745 180.555557 text
grestore
74200 60400 73900 60400 10 line
gsave
false true false false 202.222224 [(SLEW_INT) ] 0 73845 60395 180.555557 text
grestore
gsave
false false false false 202.222224 [(11) ] 0 73995 60445 180.555557 text
grestore
74200 60100 73900 60100 10 line
gsave
false true false false 202.222224 [(GND) ] 0 73845 60095 180.555557 text
grestore
gsave
false false false false 202.222224 [(10) ] 0 73995 60145 180.555557 text
grestore
74200 59800 73900 59800 10 line
gsave
false true false false 202.222224 [(P2+) ] 0 73845 59795 180.555557 text
grestore
gsave
false false false false 202.222224 [(9) ] 0 73995 59845 180.555557 text
grestore
74200 59500 73900 59500 10 line
gsave
false true false false 202.222224 [(P2-) ] 0 73845 59495 180.555557 text
grestore
gsave
false false false false 202.222224 [(8) ] 0 73995 59545 180.555557 text
grestore
71500 59300 73900 59300 10 line
73900 59300 73900 61500 10 line
73900 61500 71500 61500 10 line
71500 61500 71500 59300 10 line
60 60 71170 60670 fbox
grestore
gsave
false true false false 202.222224 [(MOD1) ] 0 73905 61600 180.555557 text
grestore
gsave
false false false false 202.222224 [(MP6-OEM) ] 0 71495 61600 180.555557 text
grestore
gsave
true false false false 202.222224 [(DIP14) ] 0 72800 61600 180.555557 text
grestore
gsave
53600 59550 58300 59550 10 line
58300 59550 58300 60950 10 line
58300 60950 53600 60950 10 line
53600 60950 53600 59550 10 line
53300 60400 53600 60400 10 line
gsave
false true false false 161.777776 [(2) ] 0 53500 60450 144.444443 text
grestore
gsave
false false false false 161.777776 [(GP5/T1CKI/OSC1/CLKIN) ] 0 53650 60400 144.444443 text
grestore
53300 60100 53600 60100 10 line
gsave
false true false false 161.777776 [(3) ] 0 53500 60150 144.444443 text
grestore
gsave
false false false false 161.777776 [(GP4/AN3/T1G/OSC2/CLKOUT) ] 0 53650 60100 144.444443 text
grestore
53300 59800 53600 59800 10 line
gsave
false true false false 161.777776 [(4) ] 0 53500 59850 144.444443 text
grestore
gsave
false false false false 161.777776 [(GP3/MCLR/Vpp) ] 0 53650 59800 144.444443 text
grestore
58600 59800 58300 59800 10 line
gsave
false false false false 161.777776 [(5) ] 0 58400 59850 144.444443 text
grestore
gsave
false true false false 161.777776 [(GP2/AN2/T0CKI/INT/COUT) ] 0 58250 59800 144.444443 text
grestore
58600 60100 58300 60100 10 line
gsave
false false false false 161.777776 [(6) ] 0 58400 60150 144.444443 text
grestore
gsave
false true false false 161.777776 [(GP1/AN1/CIN-/Vref/ICSPSLK) ] 0 58250 60100 144.444443 text
grestore
58600 60400 58300 60400 10 line
gsave
false false false false 161.777776 [(7) ] 0 58400 60450 144.444443 text
grestore
gsave
false true false false 161.777776 [(GP0/AN0/CIN+/ICSPDAT) ] 0 58250 60400 144.444443 text
grestore
gsave
false false false false 202.222224 [(PIC12F675) ] 0 53600 61000 180.555557 text
grestore
53300 60700 53600 60700 10 line
gsave
false true false false 161.777776 [(1) ] 0 53500 60750 144.444443 text
grestore
gsave
false false false false 161.777776 [(Vdd) ] 0 53650 60700 144.444443 text
grestore
58600 60700 58300 60700 10 line
gsave
false false false false 161.777776 [(8) ] 0 58400 60750 144.444443 text
grestore
gsave
false true false false 161.777776 [(Vss) ] 0 58250 60700 144.444443 text
grestore
grestore
gsave
false true false false 202.222224 [(U1) ] 0 58300 61050 180.555557 text
grestore
gsave
true false false false 202.222224 [(DIP8) ] 0 56000 61000 180.555557 text
grestore
gsave
72900 62600 72800 62400 10 line
72800 62400 72700 62600 10 line
72700 62600 72600 62400 10 line
72600 62400 72500 62600 10 line
72900 62600 73000 62400 10 line
73000 62400 73050 62500 10 line
73200 62500 73050 62500 10 line
72300 62500 72452 62500 10 line
72501 62600 72450 62500 10 line
grestore
gsave
true false false false 202.222224 [(R1) ] 0 72800 63100 180.555557 text
grestore
gsave
true false false false 202.222224 [(20K) ] 0 72800 62900 180.555557 text
grestore
gsave
true false false false 202.222224 [(0805) ] 0 72800 62700 180.555557 text
grestore
gsave
69700 62600 69600 62400 10 line
69600 62400 69500 62600 10 line
69500 62600 69400 62400 10 line
69400 62400 69300 62600 10 line
69700 62600 69800 62400 10 line
69800 62400 69850 62500 10 line
70000 62500 69850 62500 10 line
69100 62500 69252 62500 10 line
69301 62600 69250 62500 10 line
grestore
gsave
true false false false 202.222224 [(R2) ] 0 69600 63100 180.555557 text
grestore
gsave
true false false false 202.222224 [(3.8K) ] 0 69600 62900 180.555557 text
grestore
gsave
true false false false 202.222224 [(0805) ] 0 69600 62700 180.555557 text
grestore
70800 60400 71200 60400 10 line
70000 62500 72300 62500 10 line
70800 62500 70800 60400 10 line
73200 62500 75000 62500 10 line
75000 62500 75000 61000 10 line
75000 61000 74200 61000 10 line
gsave
68500 59000 68500 59200 10 line
68400 59000 68600 59000 10 line
68455 58950 68545 58950 10 line
68480 58910 68520 58910 10 line
grestore
68500 59200 68500 62500 10 line
gsave
69000 60400 69200 60400 10 line
69900 60400 69700 60400 10 line
69400 60600 69400 60200 10 line
69500 60600 69500 60200 10 line
69700 60400 69500 60400 10 line
69400 60400 69200 60400 10 line
grestore
gsave
true false false false 202.222224 [(C1) ] 0 69500 61500 180.555557 text
grestore
gsave
true false false false 202.222224 [(6.8nF) ] 0 69500 61300 180.555557 text
grestore
gsave
true false false false 202.222224 [(1206) ] 0 69500 61100 180.555557 text
grestore
gsave
true false false false 202.222224 [(metal film) ] 0 69500 60900 180.555557 text
grestore
gsave
true false false false 202.222224 [(ECH-U1H682GX5) ] 0 69500 60700 180.555557 text
grestore
69900 60400 70500 60400 10 line
70500 60400 70500 61000 10 line
70500 61000 71200 61000 10 line
70200 61300 71200 61300 10 line
69100 62500 68500 62500 10 line
71200 60100 68500 60100 10 line
gsave
76000 59000 76000 59200 10 line
75900 59000 76100 59000 10 line
75955 58950 76045 58950 10 line
75980 58910 76020 58910 10 line
grestore
74200 60100 76000 60100 10 line
76000 59200 76000 60300 10 line
69000 60400 68500 60400 10 line
gsave
68900 57100 69200 57100 10 line
gsave
false false false false 161.777776 [(3) ] 0 67750 57050 144.444443 text
grestore
68900 57400 69200 57400 10 line
gsave
false false false false 161.777776 [(2) ] 0 67750 57350 144.444443 text
grestore
68900 56800 69200 56800 10 line
gsave
false false false false 161.777776 [(4) ] 0 67750 56750 144.444443 text
grestore
68900 57400 68000 57400 10 line
68900 57100 68000 57100 10 line
68900 56800 68000 56800 10 line
68900 57700 69200 57700 10 line
gsave
false false false false 161.777776 [(1) ] 0 67750 57650 144.444443 text
grestore
68900 57700 68000 57700 10 line
67500 56600 68000 56600 10 line
68000 56600 68000 57900 10 line
68000 57900 67500 57900 10 line
67500 57900 67500 56600 10 line
grestore
gsave
false false false false 202.222224 [(CONN1) ] 0 67500 58400 180.555557 text
grestore
gsave
false false false false 202.222224 [(MOLEX-0039532045) ] 0 67500 58200 180.555557 text
grestore
gsave
false false false false 202.222224 [(4 Position Flat Flex to Pump) ] 0 67500 58000 180.555557 text
grestore
69200 57700 70600 57700 10 line
70600 57700 70600 59500 10 line
70600 59500 71200 59500 10 line
71200 59800 70900 59800 10 line
70900 59800 70900 57400 10 line
70900 57400 69200 57400 10 line
69200 57100 74500 57100 10 line
74500 57100 74500 59800 10 line
74500 59800 74200 59800 10 line
74200 59500 74800 59500 10 line
74800 59500 74800 56800 10 line
74800 56800 69200 56800 10 line
gsave
76000 63300 76000 63500 10 line
75850 63500 76150 63500 10 line
gsave
false false false false 161.777776 [(+5V) ] 0 75875 63550 144.444443 text
grestore
grestore
gsave
76000 60300 76000 60500 10 line
76000 61200 76000 61000 10 line
75800 60700 76200 60700 10 line
75800 60800 76200 60800 10 line
76000 61000 76000 60800 10 line
76000 60700 76000 60500 10 line
grestore
gsave
false true false false 202.222224 [(C2) ] 0 75700 61000 180.555557 text
grestore
gsave
false true false false 202.222224 [(0.1uF) ] 0 75700 60800 180.555557 text
grestore
gsave
false true false false 202.222224 [(1206) ] 0 75700 60600 180.555557 text
grestore
gsave
false true false false 202.222224 [(X7R) ] 0 75700 60400 180.555557 text
grestore
76000 63300 76000 61200 10 line
74200 61300 76000 61300 10 line
74200 60700 74500 60700 10 line
74500 60700 74500 60400 10 line
74500 60400 74200 60400 10 line
gsave
52500 62300 52500 62500 10 line
52350 62500 52650 62500 10 line
gsave
false false false false 161.777776 [(+5V) ] 0 52375 62550 144.444443 text
grestore
grestore
58600 60700 59500 60700 10 line
59500 56200 59500 62000 10 line
gsave
59500 56000 59500 56200 10 line
59600 56000 59400 56000 10 line
59545 55950 59455 55950 10 line
59520 55910 59480 55910 10 line
grestore
52500 60700 53300 60700 10 line
gsave
55300 62000 55500 62000 10 line
56200 62000 56000 62000 10 line
55700 62200 55700 61800 10 line
55800 62200 55800 61800 10 line
56000 62000 55800 62000 10 line
55700 62000 55500 62000 10 line
grestore
gsave
true false false false 202.222224 [(C3) ] 0 55700 62900 180.555557 text
grestore
gsave
true false false false 202.222224 [(0.1uF) ] 0 55700 62700 180.555557 text
grestore
gsave
true false false false 202.222224 [(1206) ] 0 55700 62500 180.555557 text
grestore
gsave
true false false false 202.222224 [(X7R) ] 0 55700 62300 180.555557 text
grestore
56200 62000 59500 62000 10 line
55300 62000 52500 62000 10 line
gsave
false false false true 202.222224 [(Note: In PCB layout be sure to allow space for high voltage isolation around MOD1 \(MP6-OEM\) pins 6,7,8,9 and CONN1.) (Including a grounded gaurd on the boar around those traces might not be bad ether in the event of exposure to moisture.) (-EEF) ] 0 67500 56400 180.555557 text
grestore
57000 57700 59500 57700 10 line
57000 57400 59500 57400 10 line
55000 57700 53000 57700 10 line
53000 57400 53000 59800 10 line
53000 59800 53300 59800 10 line
53000 57400 55000 57400 10 line
56000 56900 56000 56500 10 line
48500 56500 59500 56500 10 line
gsave
69100 64000 69300 64000 10 line
68500 64100 68500 63900 10 line
68500 64100 69000 64100 10 line
69000 64100 69100 64000 10 line
69100 64000 69000 63900 10 line
69000 63900 68500 63900 10 line
grestore
gsave
false true true false 202.222224 [(PUMP1:1) ] 0 68400 64000 180.555557 text
grestore
gsave
60500 61500 60700 61500 10 line
60700 61600 60700 61400 10 line
60700 61600 61200 61600 10 line
61200 61600 61300 61500 10 line
61300 61500 61200 61400 10 line
61200 61400 60700 61400 10 line
grestore
gsave
false false true false 202.222224 [(PUMP1:1) ] 0 61400 61500 180.555557 text
grestore
69300 64000 70800 64000 10 line
58600 60400 60000 60400 10 line
52500 60700 52500 62300 10 line
gsave
56700 57700 56254 57700 10 line
56200 57800 55800 57800 10 line
56200 57700 54 0 360 10 darc
56000 57800 56000 58100 10 line
56400 57700 56400 57400 10 line
56400 57400 56700 57400 10 line
55300 57700 55746 57700 10 line
55800 57700 54 0 360 10 darc
55600 57700 55600 57400 10 line
55600 57400 55300 57400 10 line
56500 57600 56500 57500 10 line
56500 57300 56500 57200 10 line
56100 57200 55900 57200 10 line
55500 57200 55500 57300 10 line
55500 57500 55500 57600 10 line
55500 57800 55500 57900 10 line
55500 57900 55600 57900 10 line
56500 57900 56500 57800 10 line
56000 56900 56000 57200 10 line
gsave
false true false true 202.222224 [(5) ] 90 56050 57105 180.555557 text
grestore
57000 57700 56700 57700 10 line
gsave
false false false false 202.222224 [(4) ] 0 56795 57745 180.555557 text
grestore
57000 57400 56700 57400 10 line
gsave
false false false false 202.222224 [(2) ] 0 56795 57445 180.555557 text
grestore
55000 57700 55300 57700 10 line
gsave
false true false false 202.222224 [(3) ] 0 55205 57745 180.555557 text
grestore
55000 57400 55300 57400 10 line
gsave
false true false false 202.222224 [(1) ] 0 55205 57445 180.555557 text
grestore
55700 57900 55800 57900 10 line
56200 57900 56300 57900 10 line
56400 57900 56500 57900 10 line
56500 57200 56400 57200 10 line
56300 57200 56200 57200 10 line
55600 57200 55500 57200 10 line
55800 57200 55700 57200 10 line
grestore
gsave
false true false false 202.222224 [(S2) ] 0 55905 58595 180.555557 text
grestore
gsave
false true false false 202.222224 [(Omron-B3SN-3112) ] 0 55905 58195 180.555557 text
grestore
gsave
false true false false 202.222224 [(B3SN-3112) ] 0 55905 57995 180.555557 text
grestore
gsave
false true false false 202.222224 [(Run) ] 0 55900 58400 180.555557 text
grestore
gsave
60500 58850 60500 59000 10 line
60500 58600 60448 58701 10 line
60501 58601 60553 58702 10 line
60600 58600 60500 58400 10 line
60500 58400 60400 58600 10 line
60400 58600 60300 58400 10 line
60300 58400 60200 58600 10 line
60600 58600 60700 58400 10 line
60700 58400 60750 58500 10 line
60900 58500 60750 58500 10 line
60000 58500 60152 58500 10 line
60201 58600 60150 58500 10 line
60500 58600 60500 58850 10 line
grestore
gsave
false false false false 202.222224 [(R3) ] 0 60600 59100 180.555557 text
grestore
gsave
false false false false 202.222224 [(100K) ] 0 60600 58900 180.555557 text
grestore
gsave
false false false false 202.222224 [(Vishay-TS53YL104MR10) ] 0 60600 58700 180.555557 text
grestore
60000 58500 59500 58500 10 line
58600 59800 60500 59800 10 line
60500 59800 60500 59000 10 line
gsave
63000 62300 63000 62500 10 line
62850 62500 63150 62500 10 line
gsave
false false false false 161.777776 [(+5V) ] 0 62875 62550 144.444443 text
grestore
grestore
60900 58500 63000 58500 10 line
63000 58500 63000 62300 10 line
60000 60400 60000 61500 10 line
60000 61500 60500 61500 10 line
gsave
60900 60100 60600 60100 10 line
gsave
false false false false 202.222224 [(1) ] 0 60750 60150 180.555557 text
grestore
61200 60300 61500 60300 10 line
gsave
false false false false 202.222224 [(2) ] 0 61350 60350 180.555557 text
grestore
61200 59900 61500 59900 10 line
gsave
false false false false 202.222224 [(3) ] 0 61350 59950 180.555557 text
grestore
60900 60100 61200 60100 10 line
60 60 61470 60270 fbox
grestore
gsave
false false false false 202.222224 [(S3) ] 0 61000 60900 180.555557 text
grestore
gsave
true false false false 202.222224 [(CS-4-12XA) ] 0 61100 60500 180.555557 text
grestore
gsave
true false false false 202.222224 [(Timing) ] 0 61100 60700 180.555557 text
grestore
58600 60100 60600 60100 10 line
gsave
62000 59500 62000 59700 10 line
62100 59500 61900 59500 10 line
62045 59450 61955 59450 10 line
62020 59410 61980 59410 10 line
grestore
61500 59900 62000 59900 10 line
62000 59900 62000 59700 10 line
70200 61300 70200 61900 10 line
70200 61900 68500 61900 10 line
70800 64000 70800 62500 10 line
52000 59800 52000 60100 10 line
52000 60100 53300 60100 10 line
53300 60400 48500 60400 10 line
48500 60400 48500 59800 10 line
gsave
51900 58300 52100 58200 10 line
52100 58200 51900 58100 10 line
51900 58100 52100 58000 10 line
52100 58000 51900 57900 10 line
51900 58300 52100 58400 10 line
52100 58400 52000 58450 10 line
52000 58600 52000 58450 10 line
52000 57700 52000 57852 10 line
51900 57901 52000 57850 10 line
grestore
gsave
false true false false 202.222224 [(R5) ] 0 51800 58300 180.555557 text
grestore
gsave
false true false false 202.222224 [(3.8K) ] 0 51800 58100 180.555557 text
grestore
gsave
false true false false 202.222224 [(0805) ] 0 51800 57900 180.555557 text
grestore
52000 58600 52000 58900 10 line
52000 57700 52000 56500 10 line
gsave
48400 58300 48600 58200 10 line
48600 58200 48400 58100 10 line
48400 58100 48600 58000 10 line
48600 58000 48400 57900 10 line
48400 58300 48600 58400 10 line
48600 58400 48500 58450 10 line
48500 58600 48500 58450 10 line
48500 57700 48500 57852 10 line
48400 57901 48500 57850 10 line
grestore
gsave
false true false false 202.222224 [(R4) ] 0 48300 58300 180.555557 text
grestore
gsave
false true false false 202.222224 [(3.8K) ] 0 48300 58100 180.555557 text
grestore
gsave
false true false false 202.222224 [(0805) ] 0 48300 57900 180.555557 text
grestore
48500 58600 48500 58900 10 line
48500 56500 48500 57700 10 line
gsave
52000 59800 52000 59600 10 line
gsave
false true false false 161.777776 [(2) ] 270 52050 59650 144.444443 text
grestore
52000 58900 52000 59100 10 line
gsave
false false false false 161.777776 [(4) ] 270 52050 59050 144.444443 text
grestore
52100 59400 52000 59300 10 line
52000 59300 51900 59400 10 line
52100 59400 51900 59400 10 line
52100 59300 51900 59300 10 line
52000 59300 52000 59100 10 line
52000 59400 52000 59600 10 line
52000 59350 200 0 360 10 darc
52303 59284 52404 59183 10 line
52404 59183 52355 59179 10 line
52355 59179 52457 59078 10 line
52218 59316 52318 59215 10 line
52318 59215 52269 59211 10 line
52269 59211 52370 59110 10 line
grestore
gsave
false true false false 202.222224 [(Red/Green Color \(slot 1/2\)) ] 0 51705 59000 180.555557 text
grestore
gsave
false true false false 202.222224 [(LTST-C155KGJRKT) ] 0 51705 59400 180.555557 text
grestore
gsave
false true false false 202.222224 [(LiteOn-LTST-C155KGJRKT) ] 0 51705 59200 180.555557 text
grestore
gsave
false true false false 202.222224 [(LED1_2) ] 0 51700 59600 180.555557 text
grestore
gsave
48500 59800 48500 59600 10 line
gsave
false true false false 161.777776 [(1) ] 270 48550 59650 144.444443 text
grestore
48500 58900 48500 59100 10 line
gsave
false false false false 161.777776 [(3) ] 270 48550 59050 144.444443 text
grestore
48600 59400 48500 59300 10 line
48500 59300 48400 59400 10 line
48600 59400 48400 59400 10 line
48600 59300 48400 59300 10 line
48500 59300 48500 59100 10 line
48500 59400 48500 59600 10 line
48500 59350 200 0 360 10 darc
48803 59284 48904 59183 10 line
48904 59183 48855 59179 10 line
48855 59179 48957 59078 10 line
48718 59316 48818 59215 10 line
48818 59215 48769 59211 10 line
48769 59211 48870 59110 10 line
grestore
gsave
false true false false 202.222224 [(Red/Green Color \(slot 1/2\)) ] 0 48205 59000 180.555557 text
grestore
gsave
false true false false 202.222224 [(LTST-C155KGJRKT) ] 0 48205 59400 180.555557 text
grestore
gsave
false true false false 202.222224 [(LiteOn-LTST-C155KGJRKT) ] 0 48205 59200 180.555557 text
grestore
gsave
false true false false 202.222224 [(LED1_1) ] 0 48200 59600 180.555557 text
grestore
gsave
false true false false 161.777776 [(DESIGNED BY: IJS, EEF) ] 0 83900 40100 144.444443 text
grestore
gsave
false false false false 161.777776 [(3) ] 0 78500 40100 144.444443 text
grestore
gsave
false false false false 161.777776 [(1) ] 0 77000 40100 144.444443 text
grestore
gsave
false false false false 161.777776 [(micropumpdrv.sch) ] 0 76900 40400 144.444443 text
grestore
gsave
false false false false 161.777776 [(Microfluidic Pump Driver) ] 0 77000 40700 144.444443 text
grestore
gsave
false false false false 161.777776 [(EEF) ] 0 80900 40100 144.444443 text
grestore
gsave
false false false false 161.777776 [(2013_05_31) ] 0 80800 40400 144.444443 text
grestore
60 60 71170 60670 fbox
newpath
70800 62500
25
0 360 arc
fill
newpath
70800 62500
25
0 360 arc
fill
newpath
70800 62500
25
0 360 arc
fill
newpath
70800 62500
25
0 360 arc
fill
newpath
68500 60100
25
0 360 arc
fill
newpath
68500 60400
25
0 360 arc
fill
newpath
68500 61900
25
0 360 arc
fill
newpath
68500 60100
25
0 360 arc
fill
newpath
68500 60100
25
0 360 arc
fill
newpath
76000 60100
25
0 360 arc
fill
newpath
76000 60100
25
0 360 arc
fill
newpath
76000 60100
25
0 360 arc
fill
newpath
68500 60400
25
0 360 arc
fill
newpath
68500 60400
25
0 360 arc
fill
newpath
76000 61300
25
0 360 arc
fill
newpath
76000 61300
25
0 360 arc
fill
newpath
76000 61300
25
0 360 arc
fill
newpath
59500 60700
25
0 360 arc
fill
newpath
59500 60700
25
0 360 arc
fill
newpath
59500 60700
25
0 360 arc
fill
newpath
59500 57700
25
0 360 arc
fill
newpath
59500 57400
25
0 360 arc
fill
newpath
59500 56500
25
0 360 arc
fill
newpath
59500 58500
25
0 360 arc
fill
newpath
52500 62000
25
0 360 arc
fill
newpath
52500 62000
25
0 360 arc
fill
newpath
59500 57700
25
0 360 arc
fill
newpath
59500 57700
25
0 360 arc
fill
newpath
59500 57400
25
0 360 arc
fill
newpath
59500 57400
25
0 360 arc
fill
newpath
53000 57700
25
0 360 arc
fill
newpath
53000 57700
25
0 360 arc
fill
newpath
53000 57700
25
0 360 arc
fill
newpath
56000 56500
25
0 360 arc
fill
newpath
56000 56500
25
0 360 arc
fill
newpath
59500 56500
25
0 360 arc
fill
newpath
59500 56500
25
0 360 arc
fill
newpath
56000 56500
25
0 360 arc
fill
newpath
52000 56500
25
0 360 arc
fill
newpath
52500 62000
25
0 360 arc
fill
newpath
59500 58500
25
0 360 arc
fill
newpath
59500 58500
25
0 360 arc
fill
60 60 61470 60270 fbox
newpath
68500 61900
25
0 360 arc
fill
newpath
68500 61900
25
0 360 arc
fill
newpath
70800 62500
25
0 360 arc
fill
newpath
70800 62500
25
0 360 arc
fill
newpath
52000 56500
25
0 360 arc
fill
newpath
52000 56500
25
0 360 arc
fill
showpage
%%End
